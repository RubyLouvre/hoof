{"version":3,"file":"property.js","sources":["..//Users/wenyuxiang/Seafile/hoof/src/property/dependency_detection.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/dirty_propagation.ts","..//Users/wenyuxiang/Seafile/hoof/src/utils/callable.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/property.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/constant.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/stored.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/computed.ts","..//Users/wenyuxiang/Seafile/hoof/src/property/observe.ts"],"sourcesContent":["import {Property} from './property';\n\nlet stack: Property<any>[][] = [];\nlet frame: Property<any>[] = null;\n\nexport function track(property: Property<any>) {\n\tif (frame !== null) {\n        if (frame.indexOf(property) < 0) {\n\t\t  frame.push(property);\n        }\n\t}\n}\n\nexport function evaluate<TValue>(getter: () => TValue) {\n\tstack.push(frame);\n\tframe = [];\n\tlet value = getter();\n\tlet dependencies = frame;\n\tframe = stack.pop();\n\treturn {value, dependencies};\n}\n","import {Property} from './property';\n\ninterface Updatable {\n\tupdate(): void;\n}\n\nlet dirtySeeds: Set<Property<any>> = new Set();\nlet updateQueue: Set<Updatable> = new Set();\nlet scheduled = false;\nlet committing = false;\nlet fulfilled = Promise.resolve();\n\nfunction schedule() {\n\tif (!scheduled) {\n\t\tscheduled = true;\n\t\tfulfilled.then(flush);\n\t}\n}\n\nfunction flush() {\n\tcommit();\n\tscheduled = false;\n}\n\nexport function mark(property: Property<any>) {\n\tdirtySeeds.add(property);\n\tschedule();\n}\n\nexport function queue(target: Updatable) {\n    updateQueue.add(target);\n    schedule();\n}\n\nfunction notify(target: Property<any>) {\n\ttarget.notifyObservers();\n}\n\nfunction update(target: Updatable) {\n\ttarget.update();\n}\n\nexport function commit() {\n\tif (committing) {\n\t\treturn;\n\t}\n\tcommitting = true;\n    while (dirtySeeds.size > 0 || updateQueue.size > 0) {\n        while (dirtySeeds.size > 0) {\n            let properties = dirtySeeds;\n            dirtySeeds = new Set();\n            properties.forEach(notify);\n        }\n        while (updateQueue.size > 0) {\n            let properties = updateQueue;\n            updateQueue = new Set();\n            properties.forEach(update);\n        }\n    }\n\tcommitting = false;\n}","export abstract class Callable {\n\tpublic constructor() {\n\t\tfunction delegate(...args) {\n\t\t\treturn (delegate as any as Callable).invoke(...args);\n\t\t}\n\t\tObject.setPrototypeOf(delegate, Object.getPrototypeOf(this));\n\t\treturn (delegate as any as Callable);\n\t}\n\tprotected abstract invoke(...args);\n}\n","import * as dependencyDetection from './dependency_detection';\nimport * as dirtyPropagation from './dirty_propagation';\nimport {Callable} from '../utils/callable';\n\nexport interface Property<TValue> {\n\t(): TValue;\n}\n\ninterface Observer<TValue> {\n\tonNotify(property: Property<TValue>): void;\n}\n\nexport abstract class Property<TValue> extends Callable {\n\tpublic version: number = 0;\n\tprotected field: TValue;\n\tprotected observers: Observer<TValue>[];\n\n\tpublic constructor() {\n\t\tsuper();\n\t\tif (!this.isFinal()) {\n\t\t\tthis.observers = [];\n\t\t}\n\t}\n\n\tpublic isFinal() {\n\t\treturn false;\n\t}\n\n\tprotected setField(value: TValue) {\n        // TODO:\n\t\tif (!Object.is(value, this.field) || (typeof value === 'object' || typeof value === 'function')) {\n\t\t\tthis.field = value;\n\t\t\tthis.version++;\n\t\t\tdirtyPropagation.mark(this);\n\t\t}\n\t}\n\n\tprotected invoke() {\n\t\treturn this.value();\n\t}\n\n\tpublic value() {\n\t\tdependencyDetection.track(this);\n\t\treturn this.get();\n\t}\n\tprotected abstract get(): TValue;\n\tpublic abstract set(value: TValue);\n\n\tprotected activate() { }\n\tprotected deactivate() { }\n\n\tpublic addObserver(observer: Observer<TValue>) {\n\t\tif (this.isFinal()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.observers.length <= 0) {\n\t\t\tthis.activate();\n\t\t}\n\t\tthis.observers.push(observer);\n\t}\n\n\tpublic removeObserver(observer: Observer<TValue>) {\n\t\tif (this.isFinal()) {\n\t\t\treturn;\n\t\t}\n\t\tlet index = this.observers.indexOf(observer);\n\t\tif (index >= 0) {\n\t\t\tthis.observers.splice(index, 1);\n\t\t\tif (this.observers.length <= 0) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic notifyObservers() {\n\t\tfor (let i = 0; i < this.observers.length; i++) {\n\t\t\tlet observer = this.observers[i];\n\t\t\tobserver.onNotify(this);\n\t\t}\n\t\tif (this.isFinal()) {\n\t\t\tthis.observers = undefined;\n\t\t}\n\t}\n}\n","import {Property} from './property';\n\nexport class ConstantProperty<TValue> extends Property<TValue> {\n\tpublic constructor(value: TValue) {\n\t\tsuper();\n\t\tthis.field = value;\n\t}\n\n\tpublic isFinal() {\n\t\treturn true;\n\t}\n\n\tprotected get() {\n\t\treturn this.field;\n\t}\n\n\tpublic set(value: TValue) {\n\t\tthrow new Error('Write to constant property');\n\t}\n}\n\nexport function constant<TValue>(value: TValue) {\n\treturn new ConstantProperty(value);\n}","import {Property} from './property';\n\nexport class StoredProperty<TValue> extends Property<TValue> {\n\tprivate filter(value: TValue) {\n\t\treturn value;\n\t}\n\n\tpublic constructor(initialValue: TValue, filter?: (value: TValue) => TValue) {\n\t\tsuper();\n\t\tif (filter !== undefined) {\n\t\t\tthis.filter = filter;\n\t\t}\n\t\tthis.field = (this.filter)(initialValue);\n\t}\n\n\tprotected get() {\n\t\treturn this.field;\n\t}\n\n\tpublic set(value: TValue) {\n\t\tthis.setField(value);\n\t}\n}\n\nexport function stored<TValue>(initialValue: TValue, filter?: (value: TValue) => TValue) {\n\treturn new StoredProperty(initialValue, filter);\n}\n","import {Property} from './property';\nimport * as dependencyDetection from './dependency_detection';\nimport * as dirtyPropagation from './dirty_propagation';\n\nconst enum Flags {\n\tnone = 0,\n\tactive = 1,\n\tinitial = 2,\n\tevaluating = 4,\n\tupdated = 8,\n\tfinal = 16\n}\n\nexport class ComputedProperty<TValue> extends Property<TValue> {\n\tprivate flags: Flags = Flags.initial;\n\tprivate dependencies: Property<any>[];\n\tprivate getter: () => TValue;\n\tprivate setter(value: TValue) {\n\t\tthrow new Error('Write to non-writable computed property');\n\t}\n\n\tpublic constructor(getter: () => TValue, setter?: (value: TValue) => void) {\n\t\tsuper();\n\t\tthis.getter = getter;\n\t\tif (setter !== undefined) {\n\t\t\tthis.setter = setter;\n\t\t}\n\t}\n\n\tpublic isFinal() {\n\t\treturn (this.flags & Flags.final) !== 0;\n\t}\n\n\tprotected activate() {\n\t\tthis.flags |= Flags.active;\n\t\tdirtyPropagation.queue(this);\n\t\tdirtyPropagation.commit();\n\t}\n\n\tprotected deactivate() {\n\t\tthis.flags &= ~Flags.active;\n\t\tif (this.dependencies !== undefined) {\n\t\t\tthis.dependencies.forEach((dependency) => {\n\t\t\t\tdependency.removeObserver(this);\n\t\t\t});\n\t\t\tthis.dependencies = undefined;\n\t\t}\n\t}\n\n\tprivate setDependencies(newDependencies: Property<any>[]) {\n\t\tif ((this.flags & Flags.active) === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet oldDependencies = this.dependencies;\n\t\tif (oldDependencies !== undefined) {\n            for (let j = oldDependencies.length; j-- > 0;) {\n                let dependency = oldDependencies[j];\n                if (newDependencies === undefined || newDependencies.indexOf(dependency) < 0) {\n                    dependency.removeObserver(this);\n                }\n            }\n\t\t}\n\t\tif (newDependencies !== undefined) {\n            for (let j = newDependencies.length; j-- > 0;) {\n                let dependency = newDependencies[j];\n                if (oldDependencies === undefined || oldDependencies.indexOf(dependency) < 0) {\n                    dependency.addObserver(this);\n                }\n            }\n\t\t}\n\t\tthis.dependencies = newDependencies;\n\t}\n\n\tprotected get() {\n\t\tif ((this.flags & Flags.evaluating) !== 0) {\n\t\t\tthrow new Error('Circular dependency detected');\n\t\t}\n\t\tdirtyPropagation.commit();\n\t\tthis.update();\n\t\treturn this.field;\n\t}\n\n\tpublic update() {\n\t\tif ((this.flags & Flags.updated) !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.flags |= Flags.evaluating;\n\t\tlet {value, dependencies} = dependencyDetection.evaluate(this.getter);\n\t\tthis.flags &= ~Flags.evaluating;\n\n\t\tif (dependencies.length <= 0) {\n\t\t\tdependencies = undefined;\n\t\t\tthis.flags |= Flags.final;\n\t\t}\n\n\t\tif ((this.flags & Flags.initial) !== 0) {\n\t\t\tthis.field = value;\n\t\t\tthis.flags &= ~Flags.initial;\n\t\t\tif (this.isFinal()) {\n\t\t\t\tthis.observers = undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setField(value);\n\t\t}\n\n\t\tthis.setDependencies(dependencies);\n\t\tthis.flags |= Flags.updated;\n\t}\n\n\tpublic set(value: TValue) {\n\t\t(this.setter)(value);\n\t}\n\n\tpublic onNotify() {\n\t\tif (!this.isFinal()) {\n\t\t\tthis.flags &= ~Flags.updated;\n\t\t\tdirtyPropagation.queue(this);\n\t\t}\n\t}\n}\n\nexport function computed<TValue>(getter: () => TValue, setter?: (value: TValue) => void) {\n\treturn new ComputedProperty(getter, setter);\n}","import {Property} from './property';\n\nexport function observe<TValue>(property: Property<TValue>, callback: (value: TValue, isInitial: boolean) => void) {\n    let version;\n    let observer = {\n        onNotify(property) {\n            let value = property.value();\n            let isInitial = version === undefined;\n            if (isInitial || property.version !== version) {\n                callback(value, isInitial);\n                version = property.version;\n            }\n        }\n    };\n    property.addObserver(observer);\n    observer.onNotify(property);\n    return () => {\n        property.removeObserver(observer);\n    };\n}\n"],"names":["dirtyPropagation.mark","dependencyDetection.track","dirtyPropagation.queue","dirtyPropagation.commit","dependencyDetection.evaluate"],"mappings":"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"}